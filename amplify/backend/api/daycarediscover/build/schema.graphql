type Schedule @aws_iam @aws_cognito_user_pools {
  id: ID!
  ScheduleName: String!
  description: String!
  startDate: AWSDate!
  endDate: AWSDate!
  tripImageUrl: String
  tripImageKey: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelScheduleConnection @aws_iam @aws_cognito_user_pools {
  items: [Schedule]!
  nextToken: String
}

input ModelScheduleFilterInput {
  id: ModelIDInput
  ScheduleName: ModelStringInput
  description: ModelStringInput
  startDate: ModelStringInput
  endDate: ModelStringInput
  tripImageUrl: ModelStringInput
  tripImageKey: ModelStringInput
  and: [ModelScheduleFilterInput]
  or: [ModelScheduleFilterInput]
  not: ModelScheduleFilterInput
}

type Query {
  getSchedule(id: ID!): Schedule @aws_iam @aws_cognito_user_pools
  listSchedules(filter: ModelScheduleFilterInput, limit: Int, nextToken: String): ModelScheduleConnection @aws_iam @aws_cognito_user_pools
}

input ModelScheduleConditionInput {
  ScheduleName: ModelStringInput
  description: ModelStringInput
  startDate: ModelStringInput
  endDate: ModelStringInput
  tripImageUrl: ModelStringInput
  tripImageKey: ModelStringInput
  and: [ModelScheduleConditionInput]
  or: [ModelScheduleConditionInput]
  not: ModelScheduleConditionInput
}

input CreateScheduleInput {
  id: ID
  ScheduleName: String!
  description: String!
  startDate: AWSDate!
  endDate: AWSDate!
  tripImageUrl: String
  tripImageKey: String
}

input UpdateScheduleInput {
  id: ID!
  ScheduleName: String
  description: String
  startDate: AWSDate
  endDate: AWSDate
  tripImageUrl: String
  tripImageKey: String
}

input DeleteScheduleInput {
  id: ID!
}

type Mutation {
  createSchedule(input: CreateScheduleInput!, condition: ModelScheduleConditionInput): Schedule @aws_iam @aws_cognito_user_pools
  updateSchedule(input: UpdateScheduleInput!, condition: ModelScheduleConditionInput): Schedule @aws_iam @aws_cognito_user_pools
  deleteSchedule(input: DeleteScheduleInput!, condition: ModelScheduleConditionInput): Schedule @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionScheduleFilterInput {
  id: ModelSubscriptionIDInput
  ScheduleName: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  startDate: ModelSubscriptionStringInput
  endDate: ModelSubscriptionStringInput
  tripImageUrl: ModelSubscriptionStringInput
  tripImageKey: ModelSubscriptionStringInput
  and: [ModelSubscriptionScheduleFilterInput]
  or: [ModelSubscriptionScheduleFilterInput]
}

type Subscription {
  onCreateSchedule(filter: ModelSubscriptionScheduleFilterInput, owner: String): Schedule @aws_subscribe(mutations: ["createSchedule"]) @aws_iam @aws_cognito_user_pools
  onUpdateSchedule(filter: ModelSubscriptionScheduleFilterInput, owner: String): Schedule @aws_subscribe(mutations: ["updateSchedule"]) @aws_iam @aws_cognito_user_pools
  onDeleteSchedule(filter: ModelSubscriptionScheduleFilterInput, owner: String): Schedule @aws_subscribe(mutations: ["deleteSchedule"]) @aws_iam @aws_cognito_user_pools
}
